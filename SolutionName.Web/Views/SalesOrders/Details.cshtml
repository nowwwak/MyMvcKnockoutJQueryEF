@model SolutionName.Web.ViewModel.SalesOrderViewModel
@using System.Web.Script.Serialization;
@{
    ViewBag.Title = "Sales Order Details";
}

@{ string data = new JavaScriptSerializer().Serialize(Model);}

@section scripts
{
    <script src="~/Scripts/knockout-3.1.0.js"></script>
    <script src="~/Scripts/knockout.mapping-latest.js"></script>
    <script src="~/Scripts/salesorderviewmodel.js"></script>
    <script type="text/javascript">
        var salesOrderViewModel = new SalesOrderViewModel(@Html.Raw(data));
        ko.applyBindings(salesOrderViewModel);
    </script>
}

<h2>@ViewBag.Title</h2>
@*<p>@Html.DisplayFor(model=>model.MessageToClient)</p>*@
<p data-bind="text: MessageToClient"></p>
<div>
    <div>
        <label>Customer Name:</label>
        <span data-bind="text: CustomerName"></span>
    </div>
    <div>
        <label>P.O. Number:</label>
        <span data-bind="text: PONumber"></span>
    </div>
</div>

@*<div>
    <h4>SalesOrder</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.CustomerName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CustomerName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PONumber)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PONumber)
        </dd>

    </dl>
</div>*@
<p>
    @*@Html.ActionLink("Edit", "Edit", new { id = Model.SalesOrderId }) |*@
    @Html.ActionLink("Back to List", "Index")
</p>
